name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk-version: 25.1.8937393

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Install Capacitor plugins
        run: |
          npm install @capacitor/cli@latest
          npm install @capacitor/core@latest
          npm install @capacitor/android@latest
          npm install @capacitor-community/admob@latest
          npm install @capacitor/camera@latest
          npm install @capacitor/filesystem@latest
          npm install @codetrix-studio/capacitor-google-auth@latest

      - name: Sync Capacitor and patch plugins
        run: |
          echo "üîß Syncing Capacitor..."
          npx cap sync android
          
          echo "üîß Patching plugin build.gradle files..."
          find node_modules -name "build.gradle" -path "*/android/*" | while read gradle_file; do
            if [ -f "$gradle_file" ]; then
              echo "üëâ Patching $gradle_file"
              # Replace jcenter with mavenCentral
              sed -i 's/jcenter()/mavenCentral()/' "$gradle_file"
              # Ensure google() repository exists
              if ! grep -q "google()" "$gradle_file"; then
                sed -i '/repositories {/a \        google()' "$gradle_file"
              fi
              # Add namespace if missing
              if grep -q "android {" "$gradle_file" && ! grep -q "namespace" "$gradle_file"; then
                PLUGIN_DIR=$(dirname $(dirname $gradle_file))
                PLUGIN_NAME=$(basename $PLUGIN_DIR)
                case $PLUGIN_NAME in
                  "capacitor-google-auth"|"GoogleAuth")
                    sed -i "/android {/a \    namespace \"com.codetrixstudio.capacitor.GoogleAuth\"" "$gradle_file"
                    ;;
                  "admob")
                    sed -i "/android {/a \    namespace \"com.getcapacitor.community.admob\"" "$gradle_file"
                    ;;
                  *)
                    sed -i "/android {/a \    namespace \"com.capacitorjs.plugins.$PLUGIN_NAME\"" "$gradle_file"
                    ;;
                esac
              fi
            fi
          done

          echo "üîß Fixing AndroidManifest.xml files..."
          find . -name "AndroidManifest.xml" | while read manifest; do
            if [ -f "$manifest" ]; then
              # Remove package attributes completely
              sed -i 's/ package="[^"]*"//g' "$manifest"
              sed -i 's/package="[^"]*" //g' "$manifest"
              # Ensure proper xmlns declaration
              if ! grep -q "xmlns:android" "$manifest"; then
                sed -i 's/<manifest/<manifest xmlns:android="http:\/\/schemas.android.com\/apk\/res\/android"/' "$manifest"
              fi
            fi
          done

          echo "‚úÖ Capacitor sync and patching completed."

      - name: Setup Gradle Wrapper
        run: |
          cd android
          if [ ! -f gradlew ]; then
            echo "Generating Gradle wrapper..."
            gradle wrapper --gradle-version 8.4 --distribution-type all
          fi
          chmod +x gradlew
          echo "Gradle wrapper ready"

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Clean and Build Debug APK
        run: |
          cd android
          echo "üîß Cleaning previous builds..."
          ./gradlew clean --stacktrace
          
          echo "üîß Building Debug APK..."
          ./gradlew assembleDebug --stacktrace --info --no-daemon > build-output.log 2>&1
          BUILD_EXIT_CODE=$?
          
          if [ "$BUILD_EXIT_CODE" -ne 0 ]; then
            echo "‚ùå BUILD FAILED"
            echo "========================================="
            echo "üìå BUILD ERROR LOG"
            echo "========================================="
            
            # Show recent errors
            echo "üîç Recent errors:"
            grep -i -A 5 -B 5 "error\|failed\|exception" build-output.log | tail -50
            
            echo ""
            echo "üìã Full log (last 100 lines):"
            tail -100 build-output.log
            
            exit 1
          else
            echo "‚úÖ Build completed successfully!"
            ls -la app/build/outputs/apk/debug/
          fi
        env:
          GRADLE_OPTS: "-Xmx6g -XX:MaxMetaspaceSize=1g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx4g'"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: whatsorder-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30
