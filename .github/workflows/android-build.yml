name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk-version: 25.1.8937393

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.4

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Dependencies
        run: npm install

      - name: Add Firebase & Force Kotlin
        run: |
          echo "kotlin.code.style=official" >> android/gradle.properties
          echo "kotlin.version=1.9.22" >> android/gradle.properties

          # Add Firebase to root build.gradle if missing
          if ! grep -q "google-services" android/build.gradle; then
            sed -i '/dependencies {/a \        classpath "com.google.gms:google-services:4.4.0"\n        classpath "com.google.firebase:firebase-crashlytics-gradle:2.9.9"' android/build.gradle
          fi

      - name: Setup Gradle Wrapper
        run: |
          cd android
          echo "üîß Setting up Gradle wrapper..."
          
          mkdir -p gradle/wrapper
          rm -f gradle/wrapper/gradle-wrapper.jar
          
          echo "Downloading gradle wrapper jar..."
          curl -L -o gradle/wrapper/gradle-wrapper.jar https://raw.githubusercontent.com/gradle/gradle/v8.4.0/gradle/wrapper/gradle-wrapper.jar
          
          chmod +x gradlew gradlew.bat
          ./gradlew --version || echo "Gradlew verification failed but continuing..."

      - name: Post-Fix Setup
        run: |
          npx cap sync android

          # Add Firebase plugins to app build.gradle
          if ! grep -q "com.google.gms.google-services" android/app/build.gradle; then
            sed -i '/plugins {/a \    id "com.google.gms.google-services"\n    id "com.google.firebase.crashlytics"' android/app/build.gradle
          fi

          # Add required dependencies
          if ! grep -q "firebase-crashlytics" android/app/build.gradle; then
            sed -i '/dependencies {/a \    implementation platform("com.google.firebase:firebase-bom:32.7.0")\n    implementation "com.google.firebase:firebase-crashlytics"\n    implementation "com.google.firebase:firebase-analytics"\n    implementation "androidx.activity:activity:1.7.2"\n    implementation "androidx.activity:activity-ktx:1.7.2"' android/app/build.gradle
          fi

      - name: Final Pre-Build Check
        run: |
          cd android
          echo "üîç Final verification..."
          if [ ! -d "capacitor-cordova-android-plugins" ]; then
            echo "‚ùå capacitor-cordova-android-plugins missing"
            exit 1
          fi
          if [ ! -f "app/google-services.json" ]; then
            echo "‚ùå google-services.json missing"
            exit 1
          fi
          echo "‚úÖ All critical checks passed"

      - name: Accept SDK Licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Build APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew clean --no-daemon
          ./gradlew assembleDebug --no-daemon --stacktrace > ../build-output.log 2>&1
          BUILD_STATUS=$?

          if [ $BUILD_STATUS -eq 0 ]; then
            echo "üéâ BUILD SUCCESS!"
            ls -la app/build/outputs/apk/debug/
          else
            echo "‚ùå BUILD FAILED"
            tail -50 ../build-output.log
            grep -i -E "FAILED|ERROR|Exception" ../build-output.log | tail -10 || true
            exit 1
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: whatsorder-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: build-output.log
          retention-days: 7
