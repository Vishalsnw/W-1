name: Build Android APK

# This workflow runs on GitHub Actions
# It builds a Debug APK always, and Release APK if keystore is available

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Setup Node.js (for Capacitor + Web build)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
        
      # Setup Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
        
      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      # Cache node_modules
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      # Install NPM dependencies
      - name: Install dependencies
        run: |
          npm install
          npm install -D typescript
      
      # Ensure Capacitor project is initialized
      - name: Initialize Capacitor
        run: |
          if [ ! -f capacitor.config.ts ]; then
            npx cap init "WhatsOrder" "com.vishal.whatsorder"
          fi
      
      # Ensure Android platform exists
      - name: Add Android platform
        run: |
          if [ ! -d android ]; then
            npx cap add android
          fi
      
      # Create required directories
      - name: Create web and asset directories
        run: |
          mkdir -p www
          mkdir -p android/app/src/main/assets
        
      # Sync Capacitor (copies web → android)
      - name: Sync Capacitor
        run: npx cap sync android
      
      # Ensure gradlew exists and executable
      - name: Ensure gradlew exists
        run: |
          cd android
          if [ ! -f gradlew ]; then
            echo "⚠️ gradlew missing, generating wrapper..."
            gradle wrapper
          fi
          chmod +x gradlew
          cd ..
      
      # Clean build cache
      - name: Clean build cache
        run: |
          cd android
          ./gradlew clean
          rm -rf .gradle build app/build
        
      # Build Debug APK
      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --stacktrace --refresh-dependencies
        
      # Upload Debug APK
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: whatsorder-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
        
      # Build Release APK (if keystore exists)
      - name: Build Release APK
        run: |
          cd android
          if [ -f app/whatsorder-release-key.keystore ]; then
            ./gradlew assembleRelease --stacktrace --refresh-dependencies
          else
            echo "⚠️ No keystore found, skipping release build"
          fi
        continue-on-error: true
      
      # Upload Release APK
      - name: Upload Release APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: whatsorder-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
        continue-on-error: true
