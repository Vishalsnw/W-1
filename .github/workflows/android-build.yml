
name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: 33.0.2

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
          
      - name: Verify package.json dependencies
        run: |
          echo "üìã Checking package.json dependencies:"
          cat package.json | grep -A 20 '"dependencies"'
          
      - name: Install and verify plugins
        run: |
          echo "üì¶ Installing Capacitor plugins..."
          npm install @capacitor-community/admob@^7.0.3 --save
          npm install @capacitor/android@^5.7.8 --save  
          npm install @capacitor/camera@^5.0.10 --save
          npm install @capacitor/filesystem@^5.2.2 --save
          npm install @codetrix-studio/capacitor-google-auth@^1.3.2 --save
          
          echo "‚úÖ Verifying installed plugins:"
          ls -la node_modules/@capacitor-community/admob/ || echo "‚ùå AdMob not found"
          ls -la node_modules/@capacitor/camera/ || echo "‚ùå Camera not found"
          ls -la node_modules/@capacitor/filesystem/ || echo "‚ùå Filesystem not found"
          ls -la node_modules/@codetrix-studio/capacitor-google-auth/ || echo "‚ùå GoogleAuth not found"
          
          echo "üîß Copying Google Auth Android files..."
          if [ -d "node_modules/@codetrix-studio/capacitor-google-auth/android" ]; then
            cp android/capacitor-google-auth-fix.gradle node_modules/@codetrix-studio/capacitor-google-auth/android/build.gradle
            cp android/capacitor-google-auth-AndroidManifest.xml node_modules/@codetrix-studio/capacitor-google-auth/android/src/main/AndroidManifest.xml
            echo "‚úÖ Google Auth build file and manifest copied"
          else
            echo "‚ùå Google Auth plugin directory not found"
          fi

      - name: Build and sync Capacitor with error checking
        run: |
          echo "üîß Running Capacitor build and sync..."
          npm run build
          
          echo "‚úÖ Verifying sync results:"
          ls -la android/app/src/main/assets/
          
          if [ -f "android/app/src/main/assets/capacitor.plugins.json" ]; then
            echo "üìã Plugin configuration:"
            cat android/app/src/main/assets/capacitor.plugins.json
          else
            echo "‚ùå capacitor.plugins.json not found!"
            exit 1
          fi

      - name: Verify Android configuration
        run: |
          ls -la android/app/src/main/assets/
          cat android/app/src/main/assets/capacitor.config.json
          cat android/app/src/main/assets/capacitor.plugins.json

      - name: Generate Gradle Wrapper
        run: |
          cd android
          if [ ! -f gradlew ]; then
            gradle wrapper --gradle-version 8.2.1 --distribution-type all
          fi
          chmod +x gradlew

      - name: Clean Gradle cache
        run: |
          cd android
          ./gradlew clean --stacktrace

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --stacktrace 2>&1 | tee build-output.log
          BUILD_EXIT_CODE=${PIPESTATUS[0]}
          if [ "$BUILD_EXIT_CODE" -ne 0 ]; then
            echo "‚ùå BUILD FAILED - Last 50 lines of build output:"
            echo "================================================"
            tail -50 build-output.log
            echo "================================================"
            echo "üîç Searching for error patterns..."
            grep -i "error\|failed\|exception" build-output.log | tail -10 || echo "No specific error patterns found"
            exit 1
          fi
        env:
          GRADLE_OPTS: "-Xmx4g -Dorg.gradle.daemon=false"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: whatsorder-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: Build Release APK (if keystore exists)
        run: |
          cd android
          if [ -f app/whatsorder-release-key.keystore ]; then
            ./gradlew assembleRelease --stacktrace 2>&1 | tee release-build-output.log
            RELEASE_EXIT_CODE=${PIPESTATUS[0]}
            if [ "$RELEASE_EXIT_CODE" -ne 0 ]; then
              echo "‚ùå RELEASE BUILD FAILED - Last 30 lines:"
              tail -30 release-build-output.log
              grep -i "error\|failed\|exception" release-build-output.log | tail -5 || echo "No specific error patterns found"
            fi
          else
            echo "‚ö†Ô∏è No keystore found, skipping release build"
          fi
        continue-on-error: true
        env:
          GRADLE_OPTS: "-Xmx4g -Dorg.gradle.daemon=false"

      - name: Upload Release APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: whatsorder-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30
        continue-on-error: true

      - name: Show Build Error Summary
        if: failure()
        run: |
          cd android
          echo "üîç BUILD ERROR SUMMARY"
          echo "======================"
          
          # Check if build output exists and show relevant errors
          if [ -f build-output.log ]; then
            echo "üìã Key Error Messages:"
            grep -i "error\|failed\|exception\|could not resolve\|missing\|not found" build-output.log | head -10
            echo ""
            echo "üìã Last 20 lines of build output:"
            tail -20 build-output.log
          fi
          
          # Check Gradle daemon logs for additional info
          if [ -f ~/.gradle/daemon/*/daemon-*.out.log ]; then
            echo ""
            echo "üìã Recent Gradle daemon errors:"
            grep -i "error\|exception" ~/.gradle/daemon/*/daemon-*.out.log | tail -5 || echo "No daemon errors found"
          fi

      - name: Upload Build Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            android/build-output.log
            android/release-build-output.log
            android/app/build/outputs/logs/
            android/build/outputs/logs/
          retention-days: 7
        continue-on-error: true
