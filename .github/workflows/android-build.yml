
name: Build Android APK

# Note: This build runs on GitHub Actions, not on Replit
# The APK will be built using GitHub's runners and available as artifacts

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: |
        npm install
        npm install -D typescript
      
    - name: Initialize Capacitor (if needed)
      run: |
        if [ ! -f capacitor.config.ts ]; then
          npx cap init "WhatsOrder" "com.vishal.whatsorder"
        fi
      
    - name: Add Android platform (if needed)
      run: |
        if [ ! -d android ]; then
          npx cap add android
        fi
      
    - name: Create web directory
      run: |
        mkdir -p www
        mkdir -p android/app/src/main/assets
        
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Check if gradlew exists and make executable
      run: |
        if [ -f android/gradlew ]; then
          chmod +x android/gradlew
        else
          echo "gradlew not found, regenerating Android platform..."
          rm -rf android
          npx cap add android
          npx cap sync android
          chmod +x android/gradlew
        fi
      
    - name: Build debug APK
      run: |
        cd android
        ./gradlew assembleDebug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: whatsorder-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        # APK built on GitHub Actions, download from Actions tab
        
    - name: Build release APK (if keystore exists)
      run: |
        cd android
        if [ -f app/whatsorder-release-key.keystore ]; then
          ./gradlew assembleRelease
        else
          echo "Release keystore not found, skipping release build"
        fi
      continue-on-error: true
      
    - name: Upload release APK artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: whatsorder-release-apk
        path: android/app/build/outputs/apk/release/app-release.apk
      continue-on-error: true
